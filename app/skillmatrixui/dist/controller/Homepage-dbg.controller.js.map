{"version":3,"file":"Homepage-dbg.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Homepage","extend","onInit","_onInit","onBeforeRendering","_onBeforeRendering","setSkillMatrixData","_handleSuccess","oData","skillMatrixData","skillMatrixFormatter","skillMatrixJSON","JSONModel","getView","setModel","oTable","byId","columnNames","forEach","personnel","Object","keys","column","includes","push","i","length","oColumn","Column","width","header","Label","text","addColumn","oCell","cell1","Text","class","path","formatter","cellColorFormatter","aColList","ColumnListItem","cells","type","bindItems","template","_handleError","oError","MessageToast","show","_setSkillMatrixData","oModel","getModel","read","success","results","error","err","_skillMatrixFormatter","skillMatrix","combinedData","item","person","find","p","ID","fullName","country","hubName","skillName","replace","proficiencyLevel","onItemPress","_onItemPress","event","table","getSource","context","getParameter","getBindingContext","personnelID","getProperty","router","getRouter","navTo"],"sources":["Homepage.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport { IBindingParams, ISubmitChangeResponse, Routes } from \"../types/global.types\";\nimport SmartTable, { SmartTable$BeforeRebindTableEvent, SmartTable$InitialiseEvent } from \"sap/ui/comp/smarttable/SmartTable\";\nimport { EntitySet } from \"sap/ui/model/analytics/odata4analytics\";\nimport {  } from \"sap/m/Table\";\nimport oControlEvent  from \"sap/ui/core/Control\";\nimport { ISkillMatrix, ISkillMatrixCombined } from \"../types/global.types\"\nimport Table from \"sap/m/Table\";\nimport { ListBase$ItemPressEvent } from  \"sap/m/ListBase\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport Column from \"sap/m/Column\";\nimport Label from \"sap/m/Label\";\nimport { foreach } from \"@sap/cds\";\nimport Text from \"sap/m/Text\";\nimport * as path from \"path\";\nimport BaseController from \"./BaseController\";\n/**\n * @namespace skillmatrixui.controller\n */\nexport default class Homepage extends BaseController {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n    }\n\n    public onBeforeRendering(): void | undefined {\n        this.setSkillMatrixData()\n    }\n\n    private _handleSuccess(oData: ISkillMatrix[]): void {\n        // Handle the success case, for example, set data to a model\n        const skillMatrixData = this.skillMatrixFormatter(oData) as ISkillMatrixCombined[];\n        const skillMatrixJSON = new JSONModel(skillMatrixData);\n        this.getView()?.setModel(skillMatrixJSON, \"skillMatrix\");\n\n        let oTable = this.byId(\"skillMatrixTable\") as Table;\n\n        // Collect column names\n        let columnNames: String[] = [];\n        skillMatrixData.forEach(personnel => {\n            Object.keys(personnel).forEach(column => {\n                if (!columnNames.includes(column)) {\n                    columnNames.push(column);\n                }\n            });\n        });\n\n        // Create columns dynamically\n        for (let i = 0; i < columnNames.length; i++) {\n            var oColumn = new Column(\"col\" + i, {\n                width: \"1em\",\n                header: new Label({\n                    text: columnNames[i]\n                })\n            });\n            oTable.addColumn(oColumn);\n        }\n\n        // Create cells for each column\n        let oCell = [];\n        for (let i = 0; i < columnNames.length; i++) {\n            var cell1 = new Text({\n                text: `{skillMatrix>${columnNames[i]}}`,\n                class: {\n                    path: `skillMatrix>${columnNames[i]}`,\n                    formatter: this.cellColorFormatter\n                }\n            });\n            oCell.push(cell1);\n        }\n\n        // Create the ColumnListItem template\n        let aColList = new ColumnListItem({\n            cells: oCell,\n            type:\"Active\"\n        });\n\n        // Bind items once, after creating the columns\n        oTable.bindItems({\n            path: \"skillMatrix>/\",\n            template: aColList\n        });\n    }\n\n\n    private _handleError(oError: Error): void {\n        // Handle the error case, for example, show a message\n        MessageToast.show(\"An error occurred while calling the function\");\n    }\n\n    public setSkillMatrixData(): ISkillMatrix[] | void {\n        const oModel = this.getView()?.getModel() as ODataModel\n        oModel.read(\"/SkillMatrix\", {\n            success: (oData: { results: ISkillMatrix[] }) => {\n                this._handleSuccess(oData.results)\n            },\n            error: (err: Error) => {\n                this._handleError(err)\n                console.log(err)\n            }\n        })\n    }\n\n    public skillMatrixFormatter(skillMatrix: ISkillMatrix[]): ISkillMatrixCombined[] {\n\n        const combinedData: ISkillMatrixCombined[] = [];\n\n        skillMatrix.forEach(item => {\n            // Check if the person already exists in the output array\n            let person = combinedData.find(p => p.ID === item.ID)!;\n\n            if (!person) {\n                // If not found, create a new person object\n                person = {\n                    ID: item.ID,\n                    fullName: item.fullName,\n                    country: item.country,\n                    hubName: item.hubName\n                };\n                combinedData.push(person);\n            }\n\n            // Add the skill to the person object\n            person[(item.skillName).replace(/ /g, '')] = item.proficiencyLevel;\n        });\n\n        return combinedData;\n\n    }\n\n    public onItemPress(event:ListBase$ItemPressEvent):void{\n        let table = event.getSource();\n        let context = event.getParameter(\"listItem\")?.getBindingContext(\"skillMatrix\");\n        let personnelID = context?.getProperty(\"ID\");\n\n        let router = this.getRouter();\n        router.navTo(\"RoutePersonnelDetail\",{personnelID:personnelID})\n    }\n\n}"],"mappings":"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","ignoreList":[]}