{"version":3,"file":"Homepage.controller.js","names":["Homepage","Controller","extend","onInit","_onInit","onBeforeRendering","_onBeforeRendering","this","setSkillMatrixData","_handleSuccess","oData","skillMatrixData","skillMatrixFormatter","skillMatrixJSON","JSONModel","getView","setModel","oTable","byId","bindItems","path","template","getBindingInfo","columnNames","Object","keys","forEach","column","includes","push","i","length","oColumn","Column","width","header","Label","text","addColumn","_handleError","oError","MessageToast","show","_setSkillMatrixData","oModel","getModel","read","success","results","error","err","_skillMatrixFormatter","skillMatrix","combinedData","item","person","find","p","ID","fullName","country","hubName","skillName","proficiencyLevel"],"sources":["Homepage.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport { IBindingParams, ISubmitChangeResponse, Routes } from \"../types/global.types\";\nimport SmartTable, { SmartTable$BeforeRebindTableEvent, SmartTable$InitialiseEvent } from \"sap/ui/comp/smarttable/SmartTable\";\nimport { EntitySet } from \"sap/ui/model/analytics/odata4analytics\";\nimport { ISkillMatrix, ISkillMatrixCombined } from \"../types/global.types\"\nimport Table from \"sap/m/Table\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport Column from \"sap/m/Column\";\nimport Label from \"sap/m/Label\";\n/**\n * @namespace skillmatrixui.controller\n */\nexport default class Homepage extends Controller {\n\n    /*eslint-disable @typescript-eslint/no-empty-function*/\n    public onInit(): void {\n\n    }\n\n    public onBeforeRendering(): void | undefined {\n        this.setSkillMatrixData()\n    }\n\n    private _handleSuccess(oData: ISkillMatrix[]): void {\n        // Handle the success case, for example, set data to a model\n        const skillMatrixData = this.skillMatrixFormatter(oData) as ISkillMatrixCombined[]\n        const skillMatrixJSON = new JSONModel(skillMatrixData);\n        this.getView()?.setModel(skillMatrixJSON, \"skillMatrix\");\n        let oTable = this.byId(\"skillMatrixTable\") as Table;\n        oTable.setModel(skillMatrixJSON, \"skillMatrix\");\n        oTable.bindItems({\n            path: \"skillMatrix>/\",\n            template: oTable.getBindingInfo(\"items\")?.template as ColumnListItem\n        });\n\n        let columnNames: String[] = [];\n\n        Object.keys(skillMatrixData[0]).forEach(column => {\n            if (!columnNames.includes(column)) {\n                columnNames.push(column)\n            }\n        })\n\n        for (let i = 0; i < columnNames.length; i++) {\n            var oColumn = new Column(\"col\" + i, {\n                width: \"1em\",\n                header: new Label({\n                    text: columnNames[i]\n                })\n        });\n        oTable.addColumn(oColumn);\n    }\n}\n\n    private _handleError(oError: Error): void {\n    // Handle the error case, for example, show a message\n    MessageToast.show(\"An error occurred while calling the function\");\n}\n\n    public setSkillMatrixData(): ISkillMatrix[] | void {\n    const oModel = this.getView()?.getModel() as ODataModel\n        oModel.read(\"/SkillMatrix\", {\n        success: (oData: { results: ISkillMatrix[] }) => {\n            this._handleSuccess(oData.results)\n        },\n        error: (err: Error) => {\n            this._handleError(err)\n            console.log(err)\n        }\n    })\n}\n\n    public skillMatrixFormatter(skillMatrix: ISkillMatrix[]): ISkillMatrixCombined[] {\n\n    const combinedData: ISkillMatrixCombined[] = [];\n\n    skillMatrix.forEach(item => {\n        // Check if the person already exists in the output array\n        let person = combinedData.find(p => p.ID === item.ID)!;\n\n        if (!person) {\n            // If not found, create a new person object\n            person = {\n                ID: item.ID,\n                fullName: item.fullName,\n                country: item.country,\n                hubName: item.hubName\n            };\n            combinedData.push(person);\n        }\n\n        // Add the skill to the person object\n        person[item.skillName] = item.proficiencyLevel;\n    });\n\n    return combinedData;\n\n}\n\n\n\n}"],"mappings":"2KAYA,MAGqBA,EAAiBC,EAAUC,OAAA,qCAGrCC,OAAM,SAAAC,IAEb,EAEOC,kBAAiB,SAAAC,IACpBC,KAAKC,oBACT,EAEQC,eAAc,SAAAA,EAACC,GAEnB,MAAMC,EAAkBJ,KAAKK,qBAAqBF,GAClD,MAAMG,EAAkB,IAAIC,EAAUH,GACtCJ,KAAKQ,WAAWC,SAASH,EAAiB,eAC1C,IAAII,EAASV,KAAKW,KAAK,oBACvBD,EAAOD,SAASH,EAAiB,eACjCI,EAAOE,UAAU,CACbC,KAAM,gBACNC,SAAUJ,EAAOK,eAAe,UAAUD,WAG9C,IAAIE,EAAwB,GAE5BC,OAAOC,KAAKd,EAAgB,IAAIe,QAAQC,IACpC,IAAKJ,EAAYK,SAASD,GAAS,CAC/BJ,EAAYM,KAAKF,EACrB,IAGJ,IAAK,IAAIG,EAAI,EAAGA,EAAIP,EAAYQ,OAAQD,IAAK,CACzC,IAAIE,EAAU,IAAIC,EAAO,MAAQH,EAAG,CAChCI,MAAO,MACPC,OAAQ,IAAIC,EAAM,CACdC,KAAMd,EAAYO,OAG9Bb,EAAOqB,UAAUN,EACrB,CACJ,EAEYO,aAAY,SAAAA,EAACC,GAErBC,EAAaC,KAAK,+CACtB,EAEWlC,mBAAkB,SAAAmC,IACzB,MAAMC,EAASrC,KAAKQ,WAAW8B,WAC3BD,EAAOE,KAAK,eAAgB,CAC5BC,QAAUrC,IACNH,KAAKE,eAAeC,EAAMsC,QAAQ,EAEtCC,MAAQC,IACJ3C,KAAKgC,aAAaW,EAAI,GAIlC,EAEWtC,qBAAoB,SAAAuC,EAACC,GAE5B,MAAMC,EAAuC,GAE7CD,EAAY1B,QAAQ4B,IAEhB,IAAIC,EAASF,EAAaG,KAAKC,GAAKA,EAAEC,KAAOJ,EAAKI,IAElD,IAAKH,EAAQ,CAETA,EAAS,CACLG,GAAIJ,EAAKI,GACTC,SAAUL,EAAKK,SACfC,QAASN,EAAKM,QACdC,QAASP,EAAKO,SAElBR,EAAaxB,KAAK0B,EACtB,CAGAA,EAAOD,EAAKQ,WAAaR,EAAKS,gBAAgB,GAGlD,OAAOV,CAEX,IAAC,OArFoBrD,CAAQ","ignoreList":[]}